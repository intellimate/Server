/**
 * This class is generated by jOOQ
 */
package org.intellimate.server.database.model.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.intellimate.server.database.model.Izoudb;
import org.intellimate.server.database.model.Keys;
import org.intellimate.server.database.model.tables.records.AppRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class App extends TableImpl<AppRecord> {

    private static final long serialVersionUID = 1619966161;

    /**
     * The reference instance of <code>izoudb.App</code>
     */
    public static final App APP = new App();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AppRecord> getRecordType() {
        return AppRecord.class;
    }

    /**
     * The column <code>izoudb.App.id_app</code>.
     */
    public final TableField<AppRecord, Integer> ID_APP = createField("id_app", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>izoudb.App.developer</code>.
     */
    public final TableField<AppRecord, Integer> DEVELOPER = createField("developer", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>izoudb.App.name</code>.
     */
    public final TableField<AppRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>izoudb.App.description</code>.
     */
    public final TableField<AppRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>izoudb.App.active</code>.
     */
    public final TableField<AppRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * Create a <code>izoudb.App</code> table reference
     */
    public App() {
        this("App", null);
    }

    /**
     * Create an aliased <code>izoudb.App</code> table reference
     */
    public App(String alias) {
        this(alias, APP);
    }

    private App(String alias, Table<AppRecord> aliased) {
        this(alias, aliased, null);
    }

    private App(String alias, Table<AppRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Izoudb.IZOUDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AppRecord, Integer> getIdentity() {
        return Keys.IDENTITY_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AppRecord> getPrimaryKey() {
        return Keys.KEY_APP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AppRecord>> getKeys() {
        return Arrays.<UniqueKey<AppRecord>>asList(Keys.KEY_APP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AppRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AppRecord, ?>>asList(Keys.APP_DEVELOPER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public App as(String alias) {
        return new App(alias, this);
    }

    /**
     * Rename this table
     */
    public App rename(String name) {
        return new App(name, null);
    }
}
