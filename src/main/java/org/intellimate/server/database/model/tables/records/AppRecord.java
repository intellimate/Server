/**
 * This class is generated by jOOQ
 */
package org.intellimate.server.database.model.tables.records;


import javax.annotation.Generated;

import org.intellimate.server.database.model.tables.App;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppRecord extends UpdatableRecordImpl<AppRecord> implements Record4<Integer, Integer, String, String> {

	private static final long serialVersionUID = -631460915;

	/**
	 * Setter for <code>izou_server.App.id_app</code>.
	 */
	public void setIdApp(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>izou_server.App.id_app</code>.
	 */
	public Integer getIdApp() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>izou_server.App.developer</code>.
	 */
	public void setDeveloper(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>izou_server.App.developer</code>.
	 */
	public Integer getDeveloper() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>izou_server.App.name</code>.
	 */
	public void setName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>izou_server.App.name</code>.
	 */
	public String getName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>izou_server.App.description</code>.
	 */
	public void setDescription(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>izou_server.App.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, String, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, String, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return App.APP.ID_APP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return App.APP.DEVELOPER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return App.APP.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return App.APP.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdApp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getDeveloper();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AppRecord value1(Integer value) {
		setIdApp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AppRecord value2(Integer value) {
		setDeveloper(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AppRecord value3(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AppRecord value4(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AppRecord values(Integer value1, Integer value2, String value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AppRecord
	 */
	public AppRecord() {
		super(App.APP);
	}

	/**
	 * Create a detached, initialised AppRecord
	 */
	public AppRecord(Integer idApp, Integer developer, String name, String description) {
		super(App.APP);

		setValue(0, idApp);
		setValue(1, developer);
		setValue(2, name);
		setValue(3, description);
	}
}
