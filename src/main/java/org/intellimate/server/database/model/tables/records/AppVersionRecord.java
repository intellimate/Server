/**
 * This class is generated by jOOQ
 */
package org.intellimate.server.database.model.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.intellimate.server.database.model.tables.AppVersion;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppVersionRecord extends UpdatableRecordImpl<AppVersionRecord> implements Record6<Integer, Integer, Timestamp, Integer, Integer, Integer> {

    private static final long serialVersionUID = -860447790;

    /**
     * Setter for <code>izoudb.App_Version.id_App_Version</code>.
     */
    public void setIdAppVersion(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>izoudb.App_Version.id_App_Version</code>.
     */
    public Integer getIdAppVersion() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>izoudb.App_Version.app</code>.
     */
    public void setApp(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>izoudb.App_Version.app</code>.
     */
    public Integer getApp() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>izoudb.App_Version.timestamp</code>.
     */
    public void setTimestamp(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>izoudb.App_Version.timestamp</code>.
     */
    public Timestamp getTimestamp() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>izoudb.App_Version.major</code>.
     */
    public void setMajor(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>izoudb.App_Version.major</code>.
     */
    public Integer getMajor() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>izoudb.App_Version.minor</code>.
     */
    public void setMinor(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>izoudb.App_Version.minor</code>.
     */
    public Integer getMinor() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>izoudb.App_Version.patch</code>.
     */
    public void setPatch(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>izoudb.App_Version.patch</code>.
     */
    public Integer getPatch() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Timestamp, Integer, Integer, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Timestamp, Integer, Integer, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return AppVersion.APP_VERSION.ID_APP_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return AppVersion.APP_VERSION.APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return AppVersion.APP_VERSION.TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return AppVersion.APP_VERSION.MAJOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return AppVersion.APP_VERSION.MINOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return AppVersion.APP_VERSION.PATCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getIdAppVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getApp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getMajor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getMinor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getPatch();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppVersionRecord value1(Integer value) {
        setIdAppVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppVersionRecord value2(Integer value) {
        setApp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppVersionRecord value3(Timestamp value) {
        setTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppVersionRecord value4(Integer value) {
        setMajor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppVersionRecord value5(Integer value) {
        setMinor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppVersionRecord value6(Integer value) {
        setPatch(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppVersionRecord values(Integer value1, Integer value2, Timestamp value3, Integer value4, Integer value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AppVersionRecord
     */
    public AppVersionRecord() {
        super(AppVersion.APP_VERSION);
    }

    /**
     * Create a detached, initialised AppVersionRecord
     */
    public AppVersionRecord(Integer idAppVersion, Integer app, Timestamp timestamp, Integer major, Integer minor, Integer patch) {
        super(AppVersion.APP_VERSION);

        set(0, idAppVersion);
        set(1, app);
        set(2, timestamp);
        set(3, major);
        set(4, minor);
        set(5, patch);
    }
}
