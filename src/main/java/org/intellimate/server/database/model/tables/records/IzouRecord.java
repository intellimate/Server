/**
 * This class is generated by jOOQ
 */
package org.intellimate.server.database.model.tables.records;


import javax.annotation.Generated;

import org.intellimate.server.database.model.tables.Izou;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IzouRecord extends UpdatableRecordImpl<IzouRecord> implements Record3<Integer, Integer, Boolean> {

	private static final long serialVersionUID = -115094539;

	/**
	 * Setter for <code>izou_server.Izou.id_Izou</code>.
	 */
	public void setIdIzou(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>izou_server.Izou.id_Izou</code>.
	 */
	public Integer getIdIzou() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>izou_server.Izou.version</code>.
	 */
	public void setVersion(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>izou_server.Izou.version</code>.
	 */
	public Integer getVersion() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>izou_server.Izou.active</code>.
	 */
	public void setActive(Boolean value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>izou_server.Izou.active</code>.
	 */
	public Boolean getActive() {
		return (Boolean) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Boolean> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Boolean> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Izou.IZOU.ID_IZOU;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Izou.IZOU.VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field3() {
		return Izou.IZOU.ACTIVE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdIzou();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value3() {
		return getActive();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IzouRecord value1(Integer value) {
		setIdIzou(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IzouRecord value2(Integer value) {
		setVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IzouRecord value3(Boolean value) {
		setActive(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IzouRecord values(Integer value1, Integer value2, Boolean value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached IzouRecord
	 */
	public IzouRecord() {
		super(Izou.IZOU);
	}

	/**
	 * Create a detached, initialised IzouRecord
	 */
	public IzouRecord(Integer idIzou, Integer version, Boolean active) {
		super(Izou.IZOU);

		setValue(0, idIzou);
		setValue(1, version);
		setValue(2, active);
	}
}
