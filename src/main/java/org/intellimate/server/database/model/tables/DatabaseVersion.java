/**
 * This class is generated by jOOQ
 */
package org.intellimate.server.database.model.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.intellimate.server.database.model.IzouServer;
import org.intellimate.server.database.model.Keys;
import org.intellimate.server.database.model.tables.records.DatabaseVersionRecord;
import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatabaseVersion extends TableImpl<DatabaseVersionRecord> {

	private static final long serialVersionUID = 1070069148;

	/**
	 * The reference instance of <code>izou_server.Database_Version</code>
	 */
	public static final DatabaseVersion DATABASE_VERSION = new DatabaseVersion();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DatabaseVersionRecord> getRecordType() {
		return DatabaseVersionRecord.class;
	}

	/**
	 * The column <code>izou_server.Database_Version.id_Database_Version</code>.
	 */
	public final TableField<DatabaseVersionRecord, Integer> ID_DATABASE_VERSION = createField("id_Database_Version", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>izou_server.Database_Version.version</code>.
	 */
	public final TableField<DatabaseVersionRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>izou_server.Database_Version.timestamp</code>.
	 */
	public final TableField<DatabaseVersionRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>izou_server.Database_Version</code> table reference
	 */
	public DatabaseVersion() {
		this("Database_Version", null);
	}

	/**
	 * Create an aliased <code>izou_server.Database_Version</code> table reference
	 */
	public DatabaseVersion(String alias) {
		this(alias, DATABASE_VERSION);
	}

	private DatabaseVersion(String alias, Table<DatabaseVersionRecord> aliased) {
		this(alias, aliased, null);
	}

	private DatabaseVersion(String alias, Table<DatabaseVersionRecord> aliased, Field<?>[] parameters) {
		super(alias, IzouServer.IZOU_SERVER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<DatabaseVersionRecord> getPrimaryKey() {
		return Keys.KEY_DATABASE_VERSION_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<DatabaseVersionRecord>> getKeys() {
		return Arrays.<UniqueKey<DatabaseVersionRecord>>asList(Keys.KEY_DATABASE_VERSION_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DatabaseVersion as(String alias) {
		return new DatabaseVersion(alias, this);
	}

	/**
	 * Rename this table
	 */
	public DatabaseVersion rename(String name) {
		return new DatabaseVersion(name, null);
	}
}
