/**
 * This class is generated by jOOQ
 */
package org.intellimate.server.database.model.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.intellimate.server.database.model.Izoudb;
import org.intellimate.server.database.model.Keys;
import org.intellimate.server.database.model.tables.records.IzouInstanceRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IzouInstance extends TableImpl<IzouInstanceRecord> {

    private static final long serialVersionUID = 1992955167;

    /**
     * The reference instance of <code>izoudb.Izou_Instance</code>
     */
    public static final IzouInstance IZOU_INSTANCE = new IzouInstance();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IzouInstanceRecord> getRecordType() {
        return IzouInstanceRecord.class;
    }

    /**
     * The column <code>izoudb.Izou_Instance.id_Instances</code>.
     */
    public final TableField<IzouInstanceRecord, Integer> ID_INSTANCES = createField("id_Instances", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>izoudb.Izou_Instance.user</code>.
     */
    public final TableField<IzouInstanceRecord, Integer> USER = createField("user", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>izoudb.Izou_Instance.name</code>.
     */
    public final TableField<IzouInstanceRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>izoudb.Izou_Instance</code> table reference
     */
    public IzouInstance() {
        this("Izou_Instance", null);
    }

    /**
     * Create an aliased <code>izoudb.Izou_Instance</code> table reference
     */
    public IzouInstance(String alias) {
        this(alias, IZOU_INSTANCE);
    }

    private IzouInstance(String alias, Table<IzouInstanceRecord> aliased) {
        this(alias, aliased, null);
    }

    private IzouInstance(String alias, Table<IzouInstanceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Izoudb.IZOUDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<IzouInstanceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_IZOU_INSTANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IzouInstanceRecord> getPrimaryKey() {
        return Keys.KEY_IZOU_INSTANCE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IzouInstanceRecord>> getKeys() {
        return Arrays.<UniqueKey<IzouInstanceRecord>>asList(Keys.KEY_IZOU_INSTANCE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<IzouInstanceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<IzouInstanceRecord, ?>>asList(Keys.IZOU_INSTANCE_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IzouInstance as(String alias) {
        return new IzouInstance(alias, this);
    }

    /**
     * Rename this table
     */
    public IzouInstance rename(String name) {
        return new IzouInstance(name, null);
    }
}
