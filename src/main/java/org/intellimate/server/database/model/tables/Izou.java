/**
 * This class is generated by jOOQ
 */
package org.intellimate.server.database.model.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.intellimate.server.database.model.Izoudb;
import org.intellimate.server.database.model.Keys;
import org.intellimate.server.database.model.tables.records.IzouRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Izou extends TableImpl<IzouRecord> {

    private static final long serialVersionUID = -322521474;

    /**
     * The reference instance of <code>izoudb.Izou</code>
     */
    public static final Izou IZOU = new Izou();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IzouRecord> getRecordType() {
        return IzouRecord.class;
    }

    /**
     * The column <code>izoudb.Izou.id_Izou</code>.
     */
    public final TableField<IzouRecord, Integer> ID_IZOU = createField("id_Izou", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>izoudb.Izou.active</code>.
     */
    public final TableField<IzouRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>izoudb.Izou.major</code>.
     */
    public final TableField<IzouRecord, Integer> MAJOR = createField("major", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>izoudb.Izou.minor</code>.
     */
    public final TableField<IzouRecord, Integer> MINOR = createField("minor", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>izoudb.Izou.patch</code>.
     */
    public final TableField<IzouRecord, Integer> PATCH = createField("patch", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>izoudb.Izou.version</code>.
     */
    public final TableField<IzouRecord, String> VERSION = createField("version", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>izoudb.Izou</code> table reference
     */
    public Izou() {
        this("Izou", null);
    }

    /**
     * Create an aliased <code>izoudb.Izou</code> table reference
     */
    public Izou(String alias) {
        this(alias, IZOU);
    }

    private Izou(String alias, Table<IzouRecord> aliased) {
        this(alias, aliased, null);
    }

    private Izou(String alias, Table<IzouRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Izoudb.IZOUDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<IzouRecord, Integer> getIdentity() {
        return Keys.IDENTITY_IZOU;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IzouRecord> getPrimaryKey() {
        return Keys.KEY_IZOU_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IzouRecord>> getKeys() {
        return Arrays.<UniqueKey<IzouRecord>>asList(Keys.KEY_IZOU_PRIMARY, Keys.KEY_IZOU_VERSION_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Izou as(String alias) {
        return new Izou(alias, this);
    }

    /**
     * Rename this table
     */
    public Izou rename(String name) {
        return new Izou(name, null);
    }
}
